@use "../variables";

@layer layout {
    .header {
        height: 106px;
        position: relative;
        z-index: 5;

        &--active::before {
            background-color: variables.color(secondary, 500);
        }

        &--active {
            .hamburguer {
                path {
                    stroke: white;

                    &:nth-child(1) {
                        transform: translate(18px, -3px) rotate(45deg);
                    }

                    &:nth-child(2) {
                        transform: translate(-13px, 18px) rotate(-45deg);
                    }
                }
            }
        }

        &:not(&--active) &__dropdown {
            transform: translateX(-100%);
        }

        &--intersected &__fixed {
            backdrop-filter: blur(10px);
            background-color: rgba(variables.color(primary, 500), .5);
        }

        @include variables.respond-to(lg, min) {
            height: 112px;
        }

        @include variables.respond-to(lg, max) {
            &::before {
                content: "";
                height: 100%;
                width: 100%;
                z-index: -1;
                pointer-events: none;
                @include variables.position($type: fixed, $top: 0, $left: 0);

                transition: background-color 0.5s;
            }
        }

        &__container {
            position: fixed;
            width: 100%;
        }

        &__fixed {
            @include variables.flex($align: center, $justify: space-between);
            @include variables.spacing(padding-top, md);
            @include variables.spacing(padding-bottom, md);
            width: 100%;

            @include variables.respond-to(lg, min) {
                display: grid;
                grid-template-columns: repeat(3, 1fr);
            }
        }

        &__section {
            @include variables.flex($align: center);

            &:nth-child(1) {
                gap: 10px;
            }

            &:nth-child(2) {
                justify-content: center;

                @include variables.respond-to(lg, max) {
                    display: none;
                }
            }

            &:nth-child(3) {
                justify-content: flex-end;

                .header-anchor {
                    @include variables.respond-to(lg, max) {
                        display: none;

                    }
                }
            }
        }

        &__logo {
            @media (max-width: 639px) {
                height: 30px;
                width: 83px;
            }
        }

        &__dropdown {
            display: grid;
            grid-template-rows: 1fr auto;
            justify-content: center;
            width: 100%;

            @include variables.position($type: fixed, $top: 106px, $bottom: 0);

            transition: transform 0.5s;

            @include variables.respond-to(lg, min) {
                display: none;
            }
        }
    }

    .header-payment {
        background-color: #151515;
        border-radius: 30px;
        border: 1px solid variables.color(secondary, 500);
        gap: 10px;
        padding: 10px 20px;
        @include variables.flex($align: center);

        &__text {
            color: #fff;
            font-size: 12px;
        }
    }

    .header-anchor {
        @include variables.spacing(margin-right, sm);

        @include variables.respond-to(lg, max) {
            @include variables.flex($align: center, $justify: center);
        }

        &__list {
            @include variables.respond-to(lg, min) {
                display: flex;
                gap: 10px;
            }
        }

        &__link {
            display: block;
            color: #fff;
            font-size: 14px;

            @include variables.respond-to(lg, max) {
                font-size: 40px;
                font-family: variables.$font-countach;
                text-align: center;
                text-transform: uppercase;
            }
        }
    }

    .header-dropdown {
        background-color: #151515;
        border-radius: 10px;
        display: none;
        gap: 10px;
        z-index: 1;
        @include variables.spacing(padding, sm);
        @include variables.position($top: 100%, $right: 0);

        @include variables.respond-to(lg, max) {
            @include variables.flex($align: center, $direction: column);
        }

        &__link {
            color: #fff;
            font-size: 14px;
        }
    }

    .hamburguer {
        cursor: pointer;

        height: 32px;
        width: 32px;

        @include variables.respond-to(lg, min) {
            display: none;
        }

        path {
            transition: transform 0.5s;
        }
    }
}